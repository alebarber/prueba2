pipeline {
    agent any
    options {
        skipStagesAfterUnstable()  // Evita que las etapas posteriores se ejecuten si el pipeline está inestable
    }
    stages {
        // Etapa de compilación
        stage('Build') {
            steps {
                // Compilar el código fuente Python en bytecode
                sh 'python -m py_compile sources/add2vals.py sources/calc.py'
                // Guardar los archivos compilados para uso posterior
                stash(name: 'compiled-results', includes: 'sources/*.py*')
            }
        }
        
        // Etapa de pruebas
        stage('Test') {
            steps {
                // Ejecutar las pruebas con pytest y generar un reporte XML
                sh 'pytest --junit-xml test-reports/results.xml sources/test_calc.py'
            }
            post {
                // Siempre archivar los resultados de las pruebas
                always {
                    junit 'test-reports/results.xml'
                }
            }
        }
        
        // Etapa de entrega
        stage('Deliver') {
            steps {
                // Usar PyInstaller para generar el ejecutable de un solo archivo
                sh "pyinstaller --onefile sources/add2vals.py"
            }
            post {
                success {
                    // Archivar el artefacto (el ejecutable generado)
                    archiveArtifacts 'dist/add2vals'
                }
            }
        }
    }
}
